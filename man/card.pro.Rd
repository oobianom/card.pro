% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cards.R
\name{card.pro}
\alias{card.pro}
\title{Generate a flexible and extensible card container}
\usage{
card.pro(
  ...,
  title,
  collapsed = FALSE,
  width = 12,
  tabs = NULL,
  icon = NULL,
  xtra.header.content = NULL,
  footer = NULL,
  togglebtn = TRUE,
  editbtn = TRUE,
  expandbtn = TRUE,
  colorbtn = TRUE,
  removebtn = TRUE,
  sortable = TRUE,
  sidebar = NULL,
  header.bg = c("white", "green", "greenDark", "greenLight", "purple", "magenta", "pink",
    "pinkDark", "blueLight", "teal", "blue", "blueDark", "darken", "yellow", "orange",
    "orangeDark", "red", "redLight"),
  alert.text = NULL,
  alert.type = c("warning", "info", "success", "danger")
)
}
\arguments{
\item{...}{The elements to include within the body of the card}

\item{title}{The text to display in the header title}

\item{collapsed}{If \code{TRUE}, the card is collapsed. The default is \code{FALSE}}

\item{width}{Select a width from 1 to 12 to indicate the size of the card}

\item{tabs}{optional. A list containing tabs items, see example}

\item{icon}{Header icon e.g. shiny::icon('fire')}

\item{xtra.header.content}{additional header content e.g. "Hi"}

\item{footer}{Footer content if any}

\item{togglebtn}{show toggle button}

\item{editbtn}{show header title edit button}

\item{expandbtn}{show card expand button}

\item{colorbtn}{show header color chooser}

\item{removebtn}{show card closer button}

\item{sortable}{If \code{FALSE}, the card will not be draggable}

\item{sidebar}{optional. include side bar content}

\item{header.bg}{Header background color style}

\item{alert.text}{Enter text for the alert portion. Leave as NULL to exclude the alert}

\item{alert.type}{Indicate the type of alert to include, choices are "warning", "info", "success", "danger"}

\item{bg.fade}{If \code{TRUE}, the background will be faded if a background exists}
}
\value{
HTML code of the container with a class called card.pro that holds the items
}
\description{
Widely used card component from Bootstrap with improvements to improve utility
}
\note{
For more information on the features of the card, visit the examples section of the help documentation
}
\examples{

# Example 1
if (interactive()) {
  library(shiny)
  library(card.pro)

  shiny::shinyApp(
    ui = fluidPage(
      style = "4",
      custom.bg.color = "lightblue",
      sidebar = NULL,
      header = titlePanel(left = "Card Ex2"),
      wrapper(
        altPanel(
          card.pro(
            title = "Standard card",
            collapsed = TRUE,
            alert.text = "An alert2 for the content",
            alert.bg = "warning",
            toolbar = list(
              collapse = TRUE,
              maximize = TRUE,
              close = FALSE,
              menu = TRUE
            ),
            shiny::h3("Sample text"),
            "Lorem ipsum dolor sit a"
          )
        ),
        mainPanel(
          card(
            title = "Standard card 2",
            shiny::h1("Sample text"),
            "Lorem ipsum dolor sit a"
          )
        )
      )
    ),
    server = function(input, output) {
    }
  )
}

# Example 2
if (interactive()) {
  library(shiny)
  library(card.pro)

  shiny::shinyApp(
    ui = fluidPage(
    titlePanel(left = "Card Ex1"),
      wrapper(
        altPanel(
          width = 12,
          card(
            title = "Standard card",
            alert.text = "An alert1 for the content",
            shiny::h3("Sample text"),
            "Lorem ipsum dolor sit a"
          ),
          card.pro(
            title = "Standard card",
            collapsed = TRUE,
            alert.text = "An alert2 for the content",
            alert.type = "warning",
            shiny::h3("Sample text"),
            "Lorem ipsum dolor sit a"
          )
        )
      )
    ),
    server = function(input, output) {
    }
  )
}

}
